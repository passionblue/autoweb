/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.autosite.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.autosite.db.Page;
import com.autosite.db.Site;
import com.autosite.ds.PageDS;
import com.autosite.ds.SiteDS;
import com.autosite.struts.action.core.AutositeCoreAction;
import com.jtrend.util.WebParamUtil;

/** 
 * MyEclipse Struts
 * Creation date: 03-25-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="default" path="/jsp/layout/layout.jsp" contextRelative="true"
 */
public class UpdatePageAction extends AutositeCoreAction {
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward ex(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
        HttpSession session = request.getSession();

        
        if (isMissing(request.getParameter("pid")) || isMissing(request.getParameter("act"))) {
            sessionErrorText(session, "Invalid Request");
            return mapping.findForward("default");
        }

        // Get Site Object
        Site site = SiteDS.getInstance().registerSite(request.getServerName());
        
        long pageId = WebParamUtil.getIntValue(request.getParameter("pid"));
        
        Page page = PageDS.getInstance().getById(pageId);
        
        if (page.getSiteId() != site.getId()) {
            sessionErrorText(session, "Invalid Request");
            return mapping.findForward("default");
        }
        
        if (request.getParameter("act").equals("hide")) {
            if (page.getHide() == 0 ) {
                page.setHide(1);
                PageDS.getInstance().update(page);
            } else 
                m_logger.debug("Page already hidden " + page.getId());
                
        } else if (request.getParameter("act").equals("show")) {
            if (page.getHide() == 1 ) {
                page.setHide(0);
                PageDS.getInstance().update(page);
            }else 
                m_logger.debug("Page already shown " + page.getId());
        } else if (request.getParameter("act").equals("config")) {

            int colCount = WebParamUtil.getIntValue(request.getParameter("col"));
            
            if ( colCount > 0 && colCount <6 && page.getPageColCount() != colCount) {
                page.setPageColCount(colCount);
                PageDS.getInstance().update(page);
            }
        } else if (request.getParameter("act").equals("rename")) {
            if (!isMissing(request.getParameter("pageDisplay"))){
                page.setPageMenuTitle(request.getParameter("pageDisplay").trim());
                PageDS.getInstance().update(page);
            }
        } else if (request.getParameter("act").equals("keywords")) {
            if (!isMissing(request.getParameter("keywords"))){
                page.setPageKeywords(request.getParameter("keywords").trim());
                PageDS.getInstance().update(page);
            }
        } else if (request.getParameter("act").equals("viewtype")) {
            if (!isMissing(request.getParameter("type"))){
                page.setPageViewType(WebParamUtil.getIntValue(request.getParameter("type").trim()));
                PageDS.getInstance().update(page);
            }
        } else if (request.getParameter("act").equals("underlyingPage")) {
            if (!isMissing(request.getParameter("underlyingPage"))){
                page.setUnderlyingPage(request.getParameter("underlyingPage").trim());
                PageDS.getInstance().update(page);
            }
        }else if (request.getParameter("act").equals("menuPanel")) {
            if (!isMissing(request.getParameter("panelId"))){
                page.setMenuPanelId(WebParamUtil.getLongValue(request.getParameter("panelId")));
                PageDS.getInstance().update(page);
            }
        }else if (request.getParameter("act").equals("parentPage")) {
            if (!isMissing(request.getParameter("pageId"))){
                page.setParentId(WebParamUtil.getLongValue(request.getParameter("pageId")));
                PageDS.getInstance().update(page);
            }
        }
        
        
        return mapping.findForward("default");
    }
    protected boolean loginRequired() {
        return true;
    }

    private static Logger m_logger = Logger.getLogger(UpdatePageAction.class);
}
