/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.autosite.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.autosite.db.Page;
import com.autosite.db.Site;
import com.autosite.ds.PageDS;
import com.autosite.ds.SiteDS;
import com.autosite.struts.action.core.AutositeCoreAction;

/** 
 * MyEclipse Struts
 * Creation date: 03-21-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="default" path="/jsp/layout/layout.jsp" contextRelative="true"
 */
public class DynamicMenuAction extends AutositeCoreAction {
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward ex(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
        HttpSession session = request.getSession();
        
        String url = request.getRequestURL().toString();
        m_logger.debug(url);
        
        int start = url.indexOf("m_");
        int end = url.indexOf(".html");
        
        if ( start == -1 || end == -1 ) {
            setPage(session, "error_not_found"); //TODO need to create several error pages.
            return mapping.findForward("default");
        }
        
        String dynPageName = url.substring(start + 2, end);
 
        m_logger.info("DYN=" + dynPageName);

        session.setAttribute("k_page_name", dynPageName);
        
        Site site = SiteDS.getInstance().registerSite(request.getServerName());
        Page dynPage = PageDS.getInstance().getBySiteIdPageName(site.getId(), dynPageName);
        
        if (dynPage == null ) {
            setPage(session, "error_not_found");
            return mapping.findForward("default");
        }
        
        if ( !isMissing(request.getParameter("cat"))) {
            String category = (String) request.getParameter("cat");
            session.setAttribute("k_page_category", category);
        } else {
            session.removeAttribute("k_page_category");
        }
        
        setSessionCurrentPageId(session, String.valueOf(dynPage.getId()));
        session.setAttribute("k_is_dynpage", "true"); // from DYN page click
        request.setAttribute("k_is_dynpage", "true"); // from DYN page click
        
        String dynUnderlyingPage = "dynamic_menu_content";
        if ( !isMissing(dynPage.getUnderlyingPage()) ) {
            dynUnderlyingPage = dynPage.getUnderlyingPage();
            m_logger.info("replacing default page with " + dynUnderlyingPage);
        }
        
        setPage(session, request.getServerName(), dynUnderlyingPage);
        return mapping.findForward("default");
    }
    
    protected boolean loginRequired() {
        return false;
    }
    
    private static Logger m_logger = Logger.getLogger(DynamicMenuAction.class);
}
