/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.autosite.struts.action.core;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.jtrend.session.PageView;


/** 
 * Previously using AutositeLoginViewAction but it couldnt support access. so moved to here. 
 */
public class AutositeViewDirectAction extends AutositeCoreAction {
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward ex(ActionMapping mapping, ActionForm form, HttpServletRequest request,
            HttpServletResponse response) {
        HttpSession session = request.getSession();
        
        String url = request.getRequestURL().toString();
        m_logger.debug(url);
        
        int start = url.indexOf("v_");
        int end = url.indexOf(".html");
        
        if( start >=0 && end >= 0 ) {

            // This is same logic with DynamicTwoPartsAction for _page. keep them in synch
            
            String page = url.substring(start + 2, end);

            if (!haveAccessToPage(session, page)){
                setPage(session, "error_not_found");
                return mapping.findForward("default");
            }
            

            PageView pageView = setPage(session, page);
            
//            if ( pageView != null && pageView.isSuperAdminOnly() ) {
//                if ( ! isSuperAdmin(session)) {
//                    setPage(session, "error_not_found");
//                }
//            }
            
            if ( !hasRequestAttribute(request, "k_internally_forwarded", "true") && pageView != null && pageView.isDisallowDirectView()){
                m_logger.error("This is direct view for the page not allowing the direct view. error ");
                setPage(session, "error");
            }
            
        } else {
            setPage(session, "error_not_found");
        }
        
        return mapping.findForward("default");
    }

    protected boolean loginRequired() {
        return false;
    }

    private static Logger m_logger = Logger.getLogger(AutositeViewDirectAction.class);
}
