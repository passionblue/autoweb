/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.autosite.struts.action;

import java.sql.Timestamp;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.autosite.db.Page;
import com.autosite.db.Site;
import com.autosite.db.SitePost;
import com.autosite.ds.SiteDS;
import com.autosite.ds.SitePostDS;
import com.autosite.struts.action.core.AutositeCoreAction;
import com.jtrend.session.webprocess.WebProcess;
import com.jtrend.util.TimeNow;
import com.jtrend.util.WebParamUtil;

/** 
 * MyEclipse Struts
 * Creation date: 05-31-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="default" path="/jsp/layout/layout.jsp" contextRelative="true"
 */
public class AddSitePostAction extends AutositeCoreAction {
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward ex(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
        // TODO Auto-generated method stub
        HttpSession session = request.getSession();

        boolean hadData = false;
        
        // Get Site Object
        Site site = SiteDS.getInstance().registerSite(request.getServerName());

        SitePost sitePost = new SitePost();
        
        boolean edit = false;

        if (!isMissing(request.getParameter("edit"))) {
            if (request.getParameter("edit").trim().equals("true")) {
                edit = true;
            }

        } else if (hasRequestValue(request, "editfield", "true")||hasRequestValue(request, "ef", "true")||hasRequestValue(request, "act", "ef")) {
    
            long cid = WebParamUtil.getLongValue(request.getParameter("id"));
            SitePost _SitePost = SitePostDS.getInstance().getById(cid);
    
            if (_SitePost == null) {
                sessionErrorText(session, "Internal error occurred.");
                m_logger.warn("Failed. object not found for " + cid);
                return mapping.findForward("default");
            }
    
            if (_SitePost.getSiteId() != site.getId()) {
                sessionErrorText(session, "Internal error occurred.");
                m_logger.warn("Failed. Attempt to delete other site. This Site=" + site.getId() + ", Attempted=" + _SitePost.getSiteId()); 
                return mapping.findForward("default");
            }
    
            try{
                editField(request, response, _SitePost);
            }
            catch (Exception e) {
                m_logger.error("Error occurred", e);
                sessionErrorText(session, "Internal error occurred.");
                if (e instanceof ActionExtentException) setPage(session, ((ActionExtentException)e).getForwardPage());
                return mapping.findForward("default");
            }
    
            return mapping.findForward("default");
        }
        
        Page dynPage = getCurrentPage(request);
        if ( dynPage != null && dynPage.getPageName().equals("XHOME") ) {
            setPage(session, request.getServerName(), "home");
        } else {
            setPage(session, request.getServerName(), "dynamic_menu_content");
        }
        
        if (edit) {
            if (isMissing(request.getParameter("id")) || isMissing(request.getParameter("stid"))   ) {
                sessionErrorText(session, "Invalid Request");
                return mapping.findForward("default");
            }
            
            long id = Long.parseLong(request.getParameter("id"));
            long stid = Long.parseLong(request.getParameter("stid"));
            
            SitePost editSitePost = SitePostDS.getInstance().getById(new Long(id));
            
            m_logger.debug("editing sitePost id=" + id + "=" + editSitePost);
            
            if (!isMissing(request.getParameter("post_data"))) {
                editSitePost.setPostData(request.getParameter("post_data"));

                
                if (!isMissing(request.getParameter("post_scope"))) {
                    editSitePost.setPostScope((WebParamUtil.getIntValue(request.getParameter("post_scope"))));
                }
                
                
                if (!isMissing(request.getParameter("post_type"))) {
                    editSitePost.setPostType(WebParamUtil.getIntValue(request.getParameter("post_type")));
                } 

                if (!isMissing(request.getParameter("position_code"))) {
                    editSitePost.setPositionCode(WebParamUtil.getIntValue(request.getParameter("position_code")));
                } 

                if (!isMissing(request.getParameter("panelId"))) {
                    editSitePost.setPanelId(WebParamUtil.getLongValue(request.getParameter("panelId")));
                }
                
                if (!isMissing(request.getParameter("height"))) {
                    editSitePost.setHeight((WebParamUtil.getIntValue(request.getParameter("height"))));
                } 

                if (!isMissing(request.getParameter("width"))) {
                    editSitePost.setWidth(WebParamUtil.getIntValue(request.getParameter("width")));
                } 

                editSitePost.setPostDataExtra(request.getParameter("post_data_extra"));
                editSitePost.setStyleString(request.getParameter("style_string"));

                editSitePost.setOption1(request.getParameter("option1"));
                editSitePost.setOption2(request.getParameter("option2"));
                editSitePost.setOption3(request.getParameter("option3"));
                editSitePost.setOption4(request.getParameter("option4"));
                editSitePost.setOption5(request.getParameter("option5"));
                
                
            } else {
                sessionErrorText(session, "Invalid Request");
                return mapping.findForward("default");
            }

            editSitePost.setTimeUpdated(new TimeNow());
            SitePostDS.getInstance().update(editSitePost);
            
            return mapping.findForward("default");
        } // END EDIT
        
        WebProcess webProc = null;
        try {
            webProc = checkWebProcess(request, session);
        }
        catch (Exception e) {
            m_logger.error(e.getMessage(), e);
            return mapping.findForward("default");
        }
        
        if (!isMissing(request.getParameter("position_code"))) {
            sitePost.setPositionCode(WebParamUtil.getIntValue(request.getParameter("position_code")));
            hadData = true;
        } 

        if (!isMissing(request.getParameter("post_scope"))) {
            sitePost.setPostScope(WebParamUtil.getIntValue(request.getParameter("post_scope")));
            hadData = true;
        } 

        if (!isMissing(request.getParameter("pid"))) {
            sitePost.setPageId(WebParamUtil.getLongValue(request.getParameter("pid")));
            hadData = true;
        } 

        if (!isMissing(request.getParameter("contentId"))) {
            sitePost.setContentId(WebParamUtil.getLongValue(request.getParameter("contentId")));
            hadData = true;
        } 
        
        if (!isMissing(request.getParameter("post_type"))) {
            sitePost.setPostType(WebParamUtil.getIntValue(request.getParameter("post_type")));
            hadData = true;
        } 
        
        if (!isMissing(request.getParameter("panelId"))) {
            sitePost.setPanelId(WebParamUtil.getLongValue(request.getParameter("panelId")));
        } 

        if (!isMissing(request.getParameter("height"))) {
            sitePost.setHeight(WebParamUtil.getIntValue(request.getParameter("height")));
        } 
        
        if (!isMissing(request.getParameter("width"))) {
            sitePost.setWidth(WebParamUtil.getIntValue(request.getParameter("width")));
        } 

        if (!isMissing(request.getParameter("style_string"))) {
            sitePost.setStyleString(request.getParameter("style_string"));
        } 

        if (!isMissing(request.getParameter("option1"))) {
            sitePost.setOption1(request.getParameter("option1"));
        }

        if (!isMissing(request.getParameter("option2"))) {
            sitePost.setOption2(request.getParameter("option2"));
        }
        if (!isMissing(request.getParameter("option3"))) {
            sitePost.setOption3(request.getParameter("option3"));
        }
        if (!isMissing(request.getParameter("option4"))) {
            sitePost.setOption4(request.getParameter("option4"));
        }
        if (!isMissing(request.getParameter("option5"))) {
            sitePost.setOption5(request.getParameter("option5"));
        }
        
        
        if (sitePost.getPostType() == 0) {
            sessionErrorText(session, "Select post type");
            return mapping.findForward("default");
        }
        
        //5 is padding
        if ( sitePost.getPostType() != 5) {
            if (!isMissing(request.getParameter("post_data"))) {
                sitePost.setPostData(request.getParameter("post_data"));
                
                if (!isMissing(request.getParameter("post_data_extra"))) {
                    sitePost.setPostDataExtra(request.getParameter("post_data_extra"));
                }
    
                hadData = true;
            } else {
                sessionErrorText(session, "Enter data");
                return mapping.findForward("default");
            }
        } else {
            
        }
        
        if ( !hadData) {
            sessionErrorText(session, "Enter data");
            return mapping.findForward("default");
        }

        
        sitePost.setSiteId(site.getId());
        sitePost.setTimeCreated(new TimeNow());
        sitePost.setTimeUpdated(new TimeNow());
        
        SitePostDS.getInstance().put(sitePost);
        webProc.complete();
        
        return mapping.findForward("default"); 
    }

    protected void editField(HttpServletRequest request, HttpServletResponse response, SitePost _SitePost) throws Exception{

//      long cid = WebParamUtil.getLongValue(request.getParameter("id"));
//      SitePost _SitePost = m_ds.getById(cid);

      if (!isMissing(request.getParameter("pageId"))) {
          m_logger.debug("updating param pageId from " +_SitePost.getPageId() + "->" + request.getParameter("pageId"));
          _SitePost.setPageId(WebParamUtil.getLongValue(request.getParameter("pageId")));
      }
      if (!isMissing(request.getParameter("contentId"))) {
          m_logger.debug("updating param contentId from " +_SitePost.getContentId() + "->" + request.getParameter("contentId"));
          _SitePost.setContentId(WebParamUtil.getLongValue(request.getParameter("contentId")));
      }
      if (!isMissing(request.getParameter("panelId"))) {
          m_logger.debug("updating param panelId from " +_SitePost.getPanelId() + "->" + request.getParameter("panelId"));
          _SitePost.setPanelId(WebParamUtil.getLongValue(request.getParameter("panelId")));
      }
      if (!isMissing(request.getParameter("postScope"))) {
          m_logger.debug("updating param postScope from " +_SitePost.getPostScope() + "->" + request.getParameter("postScope"));
          _SitePost.setPostScope(WebParamUtil.getIntValue(request.getParameter("postScope")));
      }
      if (!isMissing(request.getParameter("positionCode"))) {
          m_logger.debug("updating param positionCode from " +_SitePost.getPositionCode() + "->" + request.getParameter("positionCode"));
          _SitePost.setPositionCode(WebParamUtil.getIntValue(request.getParameter("positionCode")));
      }
      if (!isMissing(request.getParameter("postType"))) {
          m_logger.debug("updating param postType from " +_SitePost.getPostType() + "->" + request.getParameter("postType"));
          _SitePost.setPostType(WebParamUtil.getIntValue(request.getParameter("postType")));
      }
      if (!isMissing(request.getParameter("postData"))) {
          m_logger.debug("updating param postData from " +_SitePost.getPostData() + "->" + request.getParameter("postData"));
          _SitePost.setPostData(WebParamUtil.getStringValue(request.getParameter("postData")));
      }
      if (!isMissing(request.getParameter("postDataExtra"))) {
          m_logger.debug("updating param postDataExtra from " +_SitePost.getPostDataExtra() + "->" + request.getParameter("postDataExtra"));
          _SitePost.setPostDataExtra(WebParamUtil.getStringValue(request.getParameter("postDataExtra")));
      }
      if (!isMissing(request.getParameter("timeCreated"))) {
          m_logger.debug("updating param timeCreated from " +_SitePost.getTimeCreated() + "->" + request.getParameter("timeCreated"));
          _SitePost.setTimeCreated(WebParamUtil.getDateValue(request.getParameter("timeCreated")));
      }
      if (!isMissing(request.getParameter("timeUpdated"))) {
          m_logger.debug("updating param timeUpdated from " +_SitePost.getTimeUpdated() + "->" + request.getParameter("timeUpdated"));
          _SitePost.setTimeUpdated(WebParamUtil.getDateValue(request.getParameter("timeUpdated")));
      }
      if (!isMissing(request.getParameter("height"))) {
          m_logger.debug("updating param height from " +_SitePost.getHeight() + "->" + request.getParameter("height"));
          _SitePost.setHeight(WebParamUtil.getIntValue(request.getParameter("height")));
      }
      if (!isMissing(request.getParameter("width"))) {
          m_logger.debug("updating param width from " +_SitePost.getWidth() + "->" + request.getParameter("width"));
          _SitePost.setWidth(WebParamUtil.getIntValue(request.getParameter("width")));
      }
      if (!isMissing(request.getParameter("styleString"))) {
          m_logger.debug("updating param styleString from " +_SitePost.getStyleString() + "->" + request.getParameter("styleString"));
          _SitePost.setStyleString(WebParamUtil.getStringValue(request.getParameter("styleString")));
      }
      if (!isMissing(request.getParameter("option1"))) {
          m_logger.debug("updating param option1 from " +_SitePost.getOption1() + "->" + request.getParameter("option1"));
          _SitePost.setOption1(WebParamUtil.getStringValue(request.getParameter("option1")));
      }
      if (!isMissing(request.getParameter("option2"))) {
          m_logger.debug("updating param option2 from " +_SitePost.getOption2() + "->" + request.getParameter("option2"));
          _SitePost.setOption2(WebParamUtil.getStringValue(request.getParameter("option2")));
      }
      if (!isMissing(request.getParameter("option3"))) {
          m_logger.debug("updating param option3 from " +_SitePost.getOption3() + "->" + request.getParameter("option3"));
          _SitePost.setOption3(WebParamUtil.getStringValue(request.getParameter("option3")));
      }
      if (!isMissing(request.getParameter("option4"))) {
          m_logger.debug("updating param option4 from " +_SitePost.getOption4() + "->" + request.getParameter("option4"));
          _SitePost.setOption4(WebParamUtil.getStringValue(request.getParameter("option4")));
      }
      if (!isMissing(request.getParameter("option5"))) {
          m_logger.debug("updating param option5 from " +_SitePost.getOption5() + "->" + request.getParameter("option5"));
          _SitePost.setOption5(WebParamUtil.getStringValue(request.getParameter("option5")));
      }
      if (!isMissing(request.getParameter("hide"))) {
          m_logger.debug("updating param hide from " +_SitePost.getHide() + "->" + request.getParameter("hide"));
          _SitePost.setHide(WebParamUtil.getIntValue(request.getParameter("hide")));
      }

      SitePostDS.getInstance().update(_SitePost);
  }
    
    
    protected boolean loginRequired() {
        return true;
    }
    
    private static Logger m_logger = Logger.getLogger(AddSitePostAction.class);
}
