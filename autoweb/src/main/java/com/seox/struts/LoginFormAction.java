/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.seox.struts;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.jtrend.struts.core.JtrendAction;
import com.seox.db.User;
import com.seox.db.UserDAO;
import com.seox.struts.form.LoginForm;
import com.seox.util.SeoxLogger;
import com.seox.work.UserBO;
import com.seox.work.UserBOPool;

/** 
 * MyEclipse Struts
 * Creation date: 09-09-2006
 * 
 * XDoclet definition:
 * @struts.action path="/login_form_submit" name="loginform" input="/jsp/statics/login_form.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/jsp/layout/layout.jsp" contextRelative="true"
 */
public class LoginFormAction extends JtrendAction {
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward ex(ActionMapping mapping, ActionForm form, HttpServletRequest request,
            HttpServletResponse response) {
        LoginForm loginform = (LoginForm) form;// TODO Auto-generated method stub

        HttpSession session = request.getSession();
        if( loginform.getEmail() == null || loginform.getEmail().trim().length() == 0) {
            //session.setAttribute("pageName", "/jsp/statics/login_form.jsp");
            setPage(session, "login_form");
            return mapping.findForward("success");    
        }

        String email = loginform.getEmail().trim();

        m_logger.debug("Search user by email :" + email);
        UserDAO dao = new UserDAO();
        List list = dao.findByEmail(email);
        dao.getSession().close();
        if ( list.size() == 1 ) {
            
            User user = (User)list.get(0);
    
            UserBO userBO = UserBOPool.getInstance().getUserBO(user.getUsername());
            if (userBO == null )
                m_logger.debug("############################");
            session.setAttribute("k_userbo", userBO);
            
            if (user.getActivatedT() == null ) {
                getSessionContext(session).setLogin(false);
                getSessionContext(session).setUsername(null);
                session.setAttribute("k_return_display", "Account is not activated yet");
                setPage(session, "return_display");
                return mapping.findForward("success");
            } else {
                //###### USER LOGGING-IN ######

                processLogin(session, userBO);

                /*
                clearSessionKeys(session);
                session.setAttribute("k_userbo", userBO);
                getSessionContext(session).setLogin(true);
                getSessionContext(session).setUsername(user.getEmail());
                
                //###### USER ANAL ######
                
                UserAnalysis analysis = (UserAnalysis)userBO.getSessionSave("k_user_analysis");

                if (analysis != null ) {
                    session.setAttribute("k_user_analysis", analysis);
                } else {
                    try {
                        analysis = new UserAnalysis(userBO.getUserObj());
                        analysis.initAllData();
                        session.setAttribute("k_user_analysis", analysis);
                        userBO.setSessionSave("k_user_analysis", analysis);
                    }
                    catch (Exception e) {
                        m_logger.error("Error while creating user anal ", e);
                    }
                }
                */
                    
                SeoxLogger.filelog("usernames/" + user.getEmail(), "Login from " + request.getRemoteAddr());
                SeoxLogger.filelog("login", user.getEmail() + " from " + request.getRemoteAddr());
                setPage(session, "login_summary");
                return mapping.findForward("success");
            }
            
        } else if (list.size() == 0){
            m_logger.debug("User not found by " + email);
            session.setAttribute("pageName", "/jsp/statics/login_form.jsp");
            setPage(session, "login_form");
            return mapping.findForward("success");    
        } else {
            m_logger.debug("Multiple users found by " + email);
            session.setAttribute("pageName", "/jsp/statics/login_form.jsp");
            setPage(session, "login_form");
            return mapping.findForward("success");    
        }
    }
    private static Logger m_logger = Logger.getLogger(LoginFormAction.class);

}
