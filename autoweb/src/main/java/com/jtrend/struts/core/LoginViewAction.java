/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.jtrend.struts.core;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.jtrend.session.PageView;


/** 
 * MyEclipse Struts
 * Creation date: 09-09-2006
 * 
 * This action forwards Static page but needs to login to fetch. 
 * all pages must be in login_statics
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/jsp/layout/layout.jsp"
 */
public class LoginViewAction extends LoginRequiredJtrendAction {
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward ex(ActionMapping mapping, ActionForm form, HttpServletRequest request,
            HttpServletResponse response) {
        HttpSession session = request.getSession();
        
        String url = request.getRequestURL().toString();
        m_logger.debug(url);
        
        int start = url.indexOf("v_");
        int end = url.indexOf(".html");
        
        if( start >=0 && end >= 0 ) {
            String page = url.substring(start + 2, end);
            copyPreserveParams(request, session);
            PageView pageView = setPage(session, page);
            
            //System.out.println( "+++" + pageView.isSuperAdminOnly() + " / " + isSuperAdmin(session));
            
            if ( pageView != null && pageView.isSuperAdminOnly() ) {
                if ( ! isSuperAdmin(session)) {
                    setPage(session, "error_not_found");
                }
            }
            
        } else {
            setPage(session, "error_not_found");
        }
        
        return mapping.findForward("default");
    }

    protected boolean loginRequired() {
        return true;
    }

    private static Logger m_logger = Logger.getLogger(LoginViewAction.class);
}
